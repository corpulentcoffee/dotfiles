# GitHub Actions workflow definition
# https://docs.github.com/actions/reference/workflow-syntax-for-github-actions

name: Pull request

on:
  pull_request:
    branches: [master]

jobs:
  install:
    name: Install checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # repository available as $GITHUB_WORKSPACE
      - run: shellcheck -- *.sh
      - run: shellcheck home/.bash* # these are sourced scripts too

      # These steps test that a fresh install actually works. To that end, do a
      # couple things to make the environment more like a regular Ubuntu system
      # and less like a GitHub Actions runner:
      #
      # - remove files that Ubuntu wouldn't normally ship to users (e.g. Ubuntu
      #   normally sets up users with a `~/.profile` that does things like add
      #   `~/bin` to the `PATH` and sourcing `~/.bashrc`; GitHub Actions also
      #   has a `~/.bash_profile` which would prevent `~/.profile` from running)
      # - run `test.sh` under a login `shell` so it can pickup `~/.profile` (and
      #   thus have a correct `PATH` for accessing `~/bin` scripts); without
      #   this, GitHub would run the script as `bash --noprofile --norc`, which
      #   doesn't setup the `PATH` and doesn't exercise bash-related dotfiles
      #
      # Note that having `install.sh` and `test.sh` as separate steps is helpful
      # for `~/.profile`, which doesn't actually add `~/bin` to the `PATH`
      # unless it actually exists. On the GitHub Actions runners, this path does
      # not exist, but `install.sh` will create it.

      - run: rm ~/.bash_profile
      - run: ./install.sh
      - run: ./test.sh
        shell: bash --login -eo pipefail -- {0}

  linter:
    name: Super-Linter checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: github/super-linter@v4.9.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for individual lint status

          VALIDATE_JSON:
            # `jsonlint` doesn't support "JSON with comments", as used by Visual
            # Studio Code (see https://github.com/zaach/jsonlint/issues/50), and
            # this repository uses Prettier anyway
            false

          # Some built-in Python-related features from the Super-Linter are
          # disabled here in favor of the "Python checks" below.
          VALIDATE_PYTHON_BLACK: false
          VALIDATE_PYTHON_MYPY: false
          VALIDATE_PYTHON_PYLINT: false

  python:
    name: Python checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: "3.8" # as on Ubuntu 20.04
      - run: pip install appdirs black boto3 PyYAML simplejson
      - run: black --check .
      - run: npm ci # use whatever Node environment runner has; shouldn't matter
      - run: node_modules/.bin/pyright
