; AWS CLI alias configuration
; https://docs.aws.amazon.com/cli/latest/userguide/cli-usage-alias.html
;
; Additional notes on how this file works (correct as of March 2021):
; - The CLI parses this as an INI-style file with botocore's raw_config_parse(),
;   which in turn uses Python's RawConfigParser().
; - A section called "toplevel" might make one believe it's possible to add
;   aliases under the service-specific subcommands, but as far as I can tell,
;   this isn't possible: the <https://github.com/awslabs/awscli-aliases> samples
;   don't do this, and the "toplevel" section is hard-coded into get_aliases()
;   in <https://github.com/aws/aws-cli/blob/develop/awscli/alias.py>.
; - The aws_completer does not seem to understand aliases, so,
;   - while service aliases (e.g. cfn = cloudformation) might seem tempting, tab
;     completion for the service subcommands and their parameters won't work,
;     and
;   - even toplevel aliases won't be completed.
; - User aliases *can* accidentally shadow built-in commands, so there is a
;   check in test.sh to try to detect that.
;
; Given the lack of service-specific subcommand aliases and the lack of even
; completion of the toplevel aliases, most non-trivial AWS work is done through
; `aws-abc-xyz`-named scripts rather than aliases here. Alias helpers should be
; stored separately as `awsalias-xxx` to allow easy completion of non-trivial
; work scripts by typing "`aws-`<TAB>".

[toplevel]
bash-completion = ! awsalias-bash-completion
whoami = sts get-caller-identity
